name: .NET

env:
  BUILD_CONFIGURATION: 'Release'
  DOTNET_VERSION: '6.0.x'
  CONTAINER_REGISTRY: 'crcoredevnortheu002.azurecr.io'
  CONTAINER_REPOSITORY: 'shre_weatherapigithub'

defaults:
    run:
      working-directory: ./weatherAPI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: ${{env.DOTNET_VERSION}}
        include-prerelease: true
   # - name: Restore dependencies
   #   run: dotnet restore
   # - name: Build
   #   run: dotnet build --no-restore
   # - name: Test
   #   run: dotnet test --no-build --verbosity normal

    # - name: Build & push Docker image in docker container register
    #   uses: mr-smithers-excellent/docker-build-push@v5  
    #   with:
    #    image: lokanash/weather-api
    #    tags: v1, latest
    #    registry: docker.io
    #    dockerfile: weatherAPI/Dockerfile
    #    username: ${{ secrets.DOCKER_USERNAME }}
    #    password: ${{ secrets.DOCKER_PASSWORD }}

    - name: login to Azure Container Registry
      uses: azure/docker-login@v1
      with:
        login-server: ${{env.CONTAINER_REGISTRY}}
        username: 'crcoredevnortheu002'
        password: 'FqNTclmSWiWUDjKYyTFKhCbjY8/3xeAe'
    
    - name: Push to Azure Container Registry
      run: |
        docker build -f Dockerfile -t ${{env.CONTAINER_REGISTRY}}/${{ENV.CONTAINER_REPOSITORY}}:${{ github.sha }} .
        docker push ${{env.CONTAINER_REGISTRY}}/${{env.CONTAINER_REPOSITORY}}:${{ github.sha }}
      working-directory: ./weatherAPI

    - task: PublishBuildArtifacts@1
